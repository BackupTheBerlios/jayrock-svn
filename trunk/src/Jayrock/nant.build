<?xml version="1.0" encoding="utf-8" ?>
<project default="all" xmlns="http://nant.sf.net/schemas/nant.xsd">

    <!--======================== PROPERTY SECTION ========================-->

    <!-- General -->

    <property name="my.project.name" value="Jayrock" />

    <property name="my.tools" value="${path::combine(nant.project.basedir, '..\..\tools')}" />
    
    <!-- NCover (code coverage) -->

    <property name="my.ncover.dir.path" value="${path::combine(my.tools, 'NCover')}" />
    <property name="my.ncover.console.exe.path" value="${path::combine(my.ncover.dir.path, 'NCover.Console.exe')}" />
    
    <!-- NCoverExplorer (code coverage) -->

    <property name="my.ncoverexplorer.dir.path" value="${path::combine(my.tools, 'NCoverExplorer')}" />
    <property name="my.ncoverexplorer.console.exe.path" value="${path::combine(my.ncoverexplorer.dir.path, 'NCoverExplorer.Console.exe')}" />

    <!-- NUnit 2.2.3 (unit-testing) -->

    <property name="my.tests" value="${path::combine(nant.project.basedir, '..\..\tests')}" />
    <property name="my.nunit.dir.path" value="${path::combine(my.tools, 'NUnit 2.2.3')}" />
    <property name="my.nunit.console.exe.path" value="${path::combine(my.nunit.dir.path, 'nunit-console.exe')}" />

    <!-- Output and Binaries -->

    <property name="my.bin.dir.name" value="..\..\bin" />
    <property name="my.bin.dir.path" value="${path::combine(nant.project.basedir, my.bin.dir.name)}" />
   
    <property name="my.output.assembly.name" value="Jayrock" />
    <property name="my.output.assembly.filename" value="${my.output.assembly.name + '.dll'}" />

    <property name="my.output.testassembly.name" value="Jayrock.Tests" />
    <property name="my.output.testassembly.filename" value="${my.output.testassembly.name + '.dll'}" />
    
    <!-- Mailing -->

    <property name="my.smtp.server" value="" />
    <if test="${environment::variable-exists('SMTPSERVER')}">
        <property name="my.smtp.server" value="${environment::get-variable('SMTPSERVER')}" />
    </if>
    <property name="my.mail.from" value="buildserver@jayrock.org" />
    <property name="my.mail.to" value="atif.aziz@skybow.com" />

    <!-- Draco (build server) -->

    <property name="draco" value="false" overwrite="false" />

    <!--======================== PROPERTY SECTION ========================-->

    <target name="build" depends="" />

    <target name="clean">
        <delete dir="${my.bin.dir.path}" failonerror="false" />
        <delete dir="obj" failonerror="false" />
    </target>

    <target name="debug">
        <property name="my.output.dir.path" value="${path::combine(my.bin.dir.path, 'Debug')}" />
        <solution configuration="Debug">
            <projects>
                <include name="Jayrock.csproj" />
                <include name="Jayrock-JSON.csproj" />
            </projects>
        </solution>
    </target>

    <target name="release">
        <property name="my.output.dir.path" value="${path::combine(my.bin.dir.path, 'Release')}" />
        <solution configuration="Release">
            <projects>
                <include name="Jayrock.csproj" />
                <include name="Jayrock-JSON.csproj" />
            </projects>
        </solution>
    </target>

    <target name="compile-test">
        <property name="my.output.dir.path" value="${path::combine(my.bin.dir.path, 'Test')}" />
        <solution configuration="Debug">
            <projects>
                <include name="Jayrock.csproj" />
                <include name="${path::combine(my.tests, 'Jayrock\Jayrock Test.csproj')}" />
            </projects>
        </solution>
    </target>

    <target name="all">
        <call target="cover" />
        <call target="debug" />
        <call target="release" />
    </target>

    <target name="test" depends="compile-test">
        <property name="my.output.testassembly.path" value="${path::combine(my.output.dir.path, my.output.testassembly.filename)}" />
        <exec program="${my.nunit.console.exe.path}" commandline='"${my.output.testassembly.path}"' />
    </target>
    
    <target name="cover" depends="compile-test">
        <property name="my.output.testassembly.path" value="${path::combine(my.output.dir.path, my.output.testassembly.filename)}" />
        <exec program="${my.ncover.console.exe.path}" commandline='/q /w "${my.output.dir.path}" /o "${nant.project.basedir}\coverage.xml" /a ${my.output.assembly.name} /c "${my.nunit.console.exe.path}" "\"${my.output.testassembly.path}\""' />
        <exec program="${my.ncoverexplorer.console.exe.path}" commandline='"${nant.project.basedir}\coverage.xml" /html:coverage-report.html /report:2 /excluded /p:${my.project.name} /minCoverage:85 "/c:${nant.project.basedir}\NCoverExplorer.config"' />
        <call target="draco" if="${draco}" />
    </target>
    
    <target name="draco">

        <fail if="${string::get-length(my.smtp.server) == 0}" 
            message="You must specify an SMTP server host value via the SMTPSERVER environment variable for this build target to succeed." />
        
        <!-- 
        NOTE:   This sleep seems to be needed because the <style> task in the cover 
                target appears to leak a file handle, causing a share violation error
                when the report has to be zipped.
        -->
        <sleep seconds="3" />
        <zip zipfile="${nant.project.basedir}\coverage.zip" ziplevel="9">
            <fileset>
                <include name="${nant.project.basedir}\coverage.*" />
            </fileset>
        </zip>
        <mail 
            from="${my.mail.from}" 
            tolist="${my.mail.to}" 
            subject="Jayrock coverage for build ${build.id}"
            format="Html"
            mailhost="${my.smtp.server}">
            <attachments>
                <include name="${nant.project.basedir}\coverage.zip" />
            </attachments>
            <files>
                <include name="${nant.project.basedir}\coverage.htm" />
            </files>
        </mail>
    </target>
    
    <target name="props">

        <!-- 
            This target is used to check proper setup of properties 
            Find what: \<property name="{[^"]+}".+$
            Replace with: <echo message="\1 = ${\1}" />
        -->
        
        <echo message="my.tools = ${my.tools}" />
        
        <echo message="my.ncover.dir.path = ${my.ncover.dir.path}" />
        <echo message="my.ncover.console.exe.path = ${my.ncover.console.exe.path}" />

        <echo message="my.tests= ${my.tests}" />
        <echo message="my.nunit.dir.path = ${my.nunit.dir.path}" />
        <echo message="my.nunit.console.exe.path = ${my.nunit.console.exe.path}" />

        <echo message="my.bin.dir.name = ${my.bin.dir.name}" />
        <echo message="my.bin.dir.path = ${my.bin.dir.path}" />
       
        <echo message="my.output.assembly.name = ${my.output.assembly.name}" />
        <echo message="my.output.assembly.filename = ${my.output.assembly.filename}" />
        <echo message="my.output.testassembly.name = ${my.output.testassembly.name}" />
        <echo message="my.output.testassembly.filename = ${my.output.testassembly.filename}" />
        
        <echo message="my.smtp.server = ${my.smtp.server}" />
        <echo message="my.mail.from = ${my.mail.from}" />
        <echo message="my.mail.to = ${my.mail.to}" />

        <echo message="draco = ${draco}" />

    </target>

</project>
